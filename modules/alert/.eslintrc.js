module.exports = {
  env: {
    node: true,
  },
  parser: "@typescript-eslint/parser",
  plugins: ["@typescript-eslint", "sonarjs", "unused-imports", "@nrwl/nx"],
  extends: [
    "plugin:@typescript-eslint/recommended",
    "plugin:sonarjs/recommended",
    "eslint-config-prettier",
  ],
  rules: {
    // indent: ['error', 4, { SwitchCase: 1, ignoredNodes: ['PropertyDefinition'] }],  // Disabled by prettier
    "prefer-arrow-callback": "off",
    semi: ["error", "always"],
    "arrow-body-style": "off",
    "no-continue": "off",
    "sonarjs/no-small-switch": "off",
    "no-loop-func": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/adjacent-overload-signatures": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "import/prefer-default-export": "off",
    "no-console": "off",
    quotes: [2, "single", { avoidEscape: true }],
    "eol-last": ["error", "always"],
    "no-multiple-empty-lines": ["error", { max: 2, maxBOF: 1 }],
    "no-await-in-loop": "off",
    "no-restricted-syntax": ["error", "LabeledStatement", "WithStatement"],
    "no-throw-literal": "error",
    "max-len": ["error", { code: 200, ignorePattern: "^import .*" }],
    "class-methods-use-this": "off",
    "no-param-reassign": "off",
    "@typescript-eslint/indent": "off",
    "no-useless-escape": "off",
    "sonarjs/cognitive-complexity": ["error", 39],
    "import/no-extraneous-dependencies": "off",
    "no-plusplus": "off",
    "max-classes-per-file": "off",
    "import/extensions": "off",
    "no-useless-return": "off",
    "sonarjs/no-collapsible-if": "off",
    "sonarjs/no-duplicated-branches": "off",
    "@typescript-eslint/no-this-alias": "off",
    "no-async-promise-executor": "off",
    "@typescript-eslint/no-object-literal-type-assertion": "off",
    "sonarjs/no-redundant-jump": "off",
    camelcase: "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "sonarjs/no-nested-template-literals": "warn",
    "sonarjs/no-empty-collection": "warn",
    "sonarjs/no-nested-switch": "warn",
    "sonarjs/no-gratuitous-expressions": "warn",
    "arrow-parens": ["error", "as-needed"],
    "@typescript-eslint/no-unused-vars": "off",
    "no-return-await": "off",
    "unused-imports/no-unused-imports": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "off",
    "default-param-last": "off",
    "no-use-before-define": "off",
    "prefer-regex-literals": "off",
    "no-unsafe-optional-chaining": "off",
    "no-underscore-dangle": "off",
    "no-promise-executor-return": "off",
    "sonarjs/prefer-single-boolean-return": "off",
  },
  settings: {
    "import/resolver": {
      node: {
        extensions: [".js", ".jsx", ".ts", ".tsx", ".d.ts"],
        paths: ["apps/legacy/src", "node_modules"],
      },
      typescript: {
        project: ["tsconfig.base.json"],
      },
    },
  },
};
